.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
decode-base64 \-  (base64)
.SH PURPOSE
Base64 decode.

.SH SYNTAX

.RS 4
.EX

decode-base64 <data> to [ define ] <output data> \\
    [ input-length <input length> ] \\
    [ output-length [ define ] <output length> ]

.EE
.RE

.SH DESCRIPTION
decode-base64 will decode string <data> into <output data>, which can be binary data. <output data> is \fBallocated memory\fP.

If "input-length" clause is used, then <input length> is the number of bytes decoded, otherwise <data> is treated as a null-terminated string and its length determined. 

The result is stored in <output data> (in "to" clause), which can be created with optional "define". The length of the decoded string can be obtained via "output-length" clause in <output length>, which can be created with optional "define".

<output data> will always have an extra null byte appended - this null byte is not included in length and is appended only as a safety precaution.

Note that the string to decode can have whitespaces before it (such as spaces or tabs), and whitespaces and new lines after it, which will be ignored for the purpose of decoding.

.SH EXAMPLES
See \fBencode-base64\fP.
.SH SEE ALSO
 \fIBase64\fP ( \fBdecode-base64\fP   \fBencode-base64\fP  )  \fISEE ALL\fP (\fBdocumentation\fP)
