.TH VELY 2vv $VERSION $DATE Development Tools
.SH NAME
FastCGI \- Vely documentation (running_application)
.SH DESCRIPTION
You can run a Vely application as a server by using \fBvf\fP program manager. Your application will communicate with outside world using with \fBFastCGI protocol\fP. 

You can access your server application by means of:

.RS 4
\[bu]    
A web server (which is probably the most common way). You need to setup a reverse proxy, i.e. a web server that will forward requests and send replies back to clients; see below.

.RE

.RS 4
\[bu]    
The command line, in which case you can use a \fBFastCGI_command_line_client\fP. 

.RE

.RS 4
\[bu]    
\fBFastCGI_API\fP, which allows any application in any programming language to access your server, as long as it has C linkage (by far most do). This method allows for MT (multithreaded) access to your application, where many client requests can be made in parallel.
Vely server runs as a number of (zero or more) background processes in parallel, processing requests.

.LP
.B SETTING UP REVERSE PROXY (WEB SERVER)
.LP

To access your application via a reverse proxy (i.e. web server), generally you need to add a proxy directive and restart the web server. 

If you use Apache, you need to connect it to your application, see \fBconnect_apache_tcp_socket\fP (for using TCP sockets) and \fBconnect_apache_unix_socket\fP (for using Unix sockets).

If you use Nginx, you need to connect it to your application, see \fBconnect_nginx_tcp_socket\fP (for using TCP sockets) and \fBconnect_nginx_unix_socket\fP (for using Unix sockets).

.LP
.B STARTING FASTCGI SERVER PROCESSES
.LP

Use \fBvf\fP, for example:

.RS 4
.EX

vf <app name>

.EE
.RE

which in general will start zero or more background resident process(es) (daemons) that process requests in parallel.

.LP
.B CONNECTION TIMEOUT
.LP

In a heavy-load environment, a client's connection may be rejected by the server. This may happen if the client runs very slowly due to swapping perhaps. Once a client establishes a connection, it has up to 5 seconds by default to send data; if it doesn't, the server will close the connection. Typically, FastCGI clients send data right away, but due to a heavy load, this time may be longer. To set the connection timeout in milliseconds, set the following variable before starting the application server, for instance:

.RS 4
.EX

export "LIBFCGI_IS_AF_UNIX_KEEPER_POLL_TIMEOUT"="8000"
vf -w 1 <app name>

.EE
.RE

In this case, the timeout is set to 8 seconds.
.SH SEE ALSO
 
.B - Running application

\fBapplication_setup\fP  
\fBCGI\fP  
\fBcommand_line\fP  
\fBcontainerize_application\fP  
\fBFastCGI\fP  
\fBplain_C_FCGI\fP    
See all 
\fBdocumentation\fP
